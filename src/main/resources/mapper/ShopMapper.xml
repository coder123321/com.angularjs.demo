<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.angular.demo.dao.ShopMapper" >
	<resultMap id="BaseResultMap" type="com.angular.demo.entity.Shop" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="shop_name" property="shop_name" jdbcType="VARCHAR" />
		<result column="shop_price" property="shop_price" jdbcType="REAL" />
		<result column="shop_count" property="shop_count" jdbcType="INTEGER" />
		<result column="create_time" property="create_time" jdbcType="DATE" />
		<result column="type" property="type" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List" >
    id, shop_name, shop_price, shop_count, create_time,type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
		<include refid="Base_Column_List" />
    from shop
    where id = #{id,jdbcType=INTEGER} 
	</select>
  
  
  
  
  
	<select id="loadGoods" resultMap="BaseResultMap" parameterType="com.angular.demo.util.Page" >
    select 
		<include refid="Base_Column_List" />
    from shop
    where 
    <if test="type != null" >
    type = #{p.type,jdbcType=INTEGER} 
    </if>
    <if test="name!= null and name!=''">
    AND shop_name like #{p.name}
		</if>
		<if test="price != null  and price!=''">
    AND shop_price = #{p.price}
		</if>
    limit #{p.begin},#{p.end}
	</select>
  
  
  
  
  
  
  
  
  
	<select id="findMen" resultMap="BaseResultMap" parameterType="com.angular.demo.entity.Shop" >
    select 
		<include refid="Base_Column_List" />
    from shop
     where
		<if test="type != null" >
    type = #{type}
		</if> 
		<if test="shop_name!= null and shop_name!=''">
    AND shop_name = #{shop_name}
		</if>
		<if test="shop_price != null  and shop_price!=''">
    AND shop_price = #{shop_price}
		</if>
 
	</select>
  
  
 
  
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shop
    where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.angular.demo.entity.Shop" >
    insert into shop (id, shop_name, shop_price, 
      shop_count, create_time)
    values (#{id,jdbcType=INTEGER}, #{shop_name,jdbcType=VARCHAR}, #{shop_price,jdbcType=REAL}, 
      #{shop_count,jdbcType=INTEGER}, #{create_time,jdbcType=DATE})
	</insert>
	<insert id="insertSelective" parameterType="com.angular.demo.entity.Shop" >
    insert into shop
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        id,
			</if>
			<if test="shop_name != null" >
        shop_name,
			</if>
			<if test="shop_price != null" >
        shop_price,
			</if>
			<if test="shop_count != null" >
        shop_count,
			</if>
			<if test="create_time != null" >
        create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        #{id,jdbcType=INTEGER},
			</if>
			<if test="shop_name != null" >
        #{shop_name,jdbcType=VARCHAR},
			</if>
			<if test="shop_price != null" >
        #{shop_price,jdbcType=REAL},
			</if>
			<if test="shop_count != null" >
        #{shop_count,jdbcType=INTEGER},
			</if>
			<if test="create_time != null" >
        #{create_time,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.angular.demo.entity.Shop" >
    update shop
		<set >
			<if test="shop_name != null" >
        shop_name = #{shop_name,jdbcType=VARCHAR},
			</if>
			<if test="shop_price != null" >
        shop_price = #{shop_price,jdbcType=REAL},
			</if>
			<if test="shop_count != null" >
        shop_count = #{shop_count,jdbcType=INTEGER},
			</if>
			<if test="create_time != null" >
        create_time = #{create_time,jdbcType=DATE},
			</if>
		</set>
    where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.angular.demo.entity.Shop" >
    update shop
    set shop_name = #{shop_name,jdbcType=VARCHAR},
      shop_price = #{shop_price,jdbcType=REAL},
      shop_count = #{shop_count,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>